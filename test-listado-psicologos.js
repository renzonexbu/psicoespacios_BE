const axios = require('axios');

// Configuraci√≥n
const BASE_URL = 'http://localhost:3000';
const AUTH_TOKEN = 'tu-jwt-token-aqui'; // Reemplazar con token v√°lido

async function testListadoPsicologos() {
  try {
    console.log('üß™ Probando endpoints de listado de psic√≥logos...\n');

    // Test 1: Listado p√∫blico (sin autenticaci√≥n)
    console.log('1Ô∏è‚É£ Probando GET /api/v1/psicologos/public:');
    try {
      const response = await axios.get(`${BASE_URL}/api/v1/psicologos/public`);
      console.log(`   ‚úÖ Respuesta exitosa: ${response.data.length} psic√≥logos encontrados`);
      
      if (response.data.length > 0) {
        console.log('   üìã Primer psic√≥logo:');
        const primerPsicologo = response.data[0];
        console.log(`      ID: ${primerPsicologo.id}`);
        console.log(`      Nombre: ${primerPsicologo.usuario.nombre} ${primerPsicologo.usuario.apellido}`);
        console.log(`      Especialidad: ${primerPsicologo.usuario.especialidad}`);
        console.log(`      Estado: ${primerPsicologo.usuario.estado}`);
      }
    } catch (error) {
      console.log(`   ‚ùå Error: ${error.response?.data?.message || error.message}`);
    }

    console.log('\n' + '='.repeat(50) + '\n');

    // Test 2: Listado autenticado
    console.log('2Ô∏è‚É£ Probando GET /api/v1/psicologos (autenticado):');
    try {
      const response = await axios.get(`${BASE_URL}/api/v1/psicologos`, {
        headers: {
          'Authorization': `Bearer ${AUTH_TOKEN}`
        }
      });
      console.log(`   ‚úÖ Respuesta exitosa: ${response.data.length} psic√≥logos encontrados`);
      
      if (response.data.length > 0) {
        console.log('   üìã Primer psic√≥logo:');
        const primerPsicologo = response.data[0];
        console.log(`      ID: ${primerPsicologo.id}`);
        console.log(`      Nombre: ${primerPsicologo.usuario.nombre} ${primerPsicologo.usuario.apellido}`);
        console.log(`      Email: ${primerPsicologo.usuario.email}`);
        console.log(`      RUT: ${primerPsicologo.usuario.rut}`);
        console.log(`      Estado: ${primerPsicologo.usuario.estado}`);
      }
    } catch (error) {
      if (error.response?.status === 401) {
        console.log('   ‚ö†Ô∏è  Error de autenticaci√≥n (esperado sin token v√°lido)');
      } else {
        console.log(`   ‚ùå Error: ${error.response?.data?.message || error.message}`);
      }
    }

    console.log('\n' + '='.repeat(50) + '\n');

    // Test 3: Psic√≥logo espec√≠fico p√∫blico
    console.log('3Ô∏è‚É£ Probando GET /api/v1/psicologos/public/:id:');
    try {
      // Usar el ID del primer psic√≥logo del listado p√∫blico
      const listadoResponse = await axios.get(`${BASE_URL}/api/v1/psicologos/public`);
      if (listadoResponse.data.length > 0) {
        const psicologoId = listadoResponse.data[0].id;
        const response = await axios.get(`${BASE_URL}/api/v1/psicologos/public/${psicologoId}`);
        console.log(`   ‚úÖ Psic√≥logo espec√≠fico encontrado: ${response.data.usuario.nombre} ${response.data.usuario.apellido}`);
      } else {
        console.log('   ‚ö†Ô∏è  No hay psic√≥logos en el listado p√∫blico para probar');
      }
    } catch (error) {
      console.log(`   ‚ùå Error: ${error.response?.data?.message || error.message}`);
    }

    console.log('\n' + '='.repeat(50) + '\n');

    // Test 4: Psic√≥logo espec√≠fico autenticado
    console.log('4Ô∏è‚É£ Probando GET /api/v1/psicologos/:id (autenticado):');
    try {
      const listadoResponse = await axios.get(`${BASE_URL}/api/v1/psicologos/public`);
      if (listadoResponse.data.length > 0) {
        const psicologoId = listadoResponse.data[0].id;
        const response = await axios.get(`${BASE_URL}/api/v1/psicologos/${psicologoId}`, {
          headers: {
            'Authorization': `Bearer ${AUTH_TOKEN}`
          }
        });
        console.log(`   ‚úÖ Psic√≥logo espec√≠fico encontrado: ${response.data.usuario.nombre} ${response.data.usuario.apellido}`);
        console.log(`      Email: ${response.data.usuario.email}`);
        console.log(`      RUT: ${response.data.usuario.rut}`);
      } else {
        console.log('   ‚ö†Ô∏è  No hay psic√≥logos en el listado para probar');
      }
    } catch (error) {
      if (error.response?.status === 401) {
        console.log('   ‚ö†Ô∏è  Error de autenticaci√≥n (esperado sin token v√°lido)');
      } else {
        console.log(`   ‚ùå Error: ${error.response?.data?.message || error.message}`);
      }
    }

    console.log('\nüéâ Pruebas completadas!');

  } catch (error) {
    console.error('‚ùå Error general:', error.message);
  }
}

// Funci√≥n para mostrar resumen de endpoints
function mostrarResumenEndpoints() {
  console.log('üìö Resumen de endpoints disponibles:');
  console.log('');
  console.log('   üîê AUTENTICADOS:');
  console.log('   GET /api/v1/psicologos           - Listado completo (ADMIN, PSICOLOGO)');
  console.log('   GET /api/v1/psicologos/:id       - Psic√≥logo espec√≠fico (ADMIN, PSICOLOGO, PACIENTE)');
  console.log('');
  console.log('   üåê P√öBLICOS:');
  console.log('   GET /api/v1/psicologos/public    - Listado p√∫blico (sin autenticaci√≥n)');
  console.log('   GET /api/v1/psicologos/public/:id - Psic√≥logo espec√≠fico p√∫blico');
  console.log('');
  console.log('   üìä DIFERENCIAS:');
  console.log('   - Autenticados: Incluyen datos sensibles (email, RUT, etc.)');
  console.log('   - P√∫blicos: Solo datos p√∫blicos (nombre, especialidad, etc.)');
  console.log('   - P√∫blicos: Solo muestran psic√≥logos activos');
}

// Ejecutar las pruebas
async function runTests() {
  mostrarResumenEndpoints();
  console.log('\n' + '='.repeat(60) + '\n');
  await testListadoPsicologos();
}

runTests();
